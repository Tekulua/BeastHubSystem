--Huma Hub
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v104=v5(v82,v19);v19=nil;return v104;else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/(2^(v32-((1 + 1) -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -(1 + 0)))) + (620 -(555 + 64)))) ;return v83-(v83%(878 -(282 + 595))) ;else local v84=2^(v32-(932 -(857 + (1711 -(1523 + 114))))) ;return (((v31%(v84 + v84))>=v84) and ((512 + 57) -(367 + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37=1270 -((414 -188) + 1044) ;local v38;local v39;local v40;local v41;while true do if ((4 -(353 -(87 + 263)))==v37) then return (v41 * (16777333 -((212 -(67 + 113)) + 85))) + (v40 * (64226 + 1310)) + (v39 * (57 + 199)) + v38 ;end if (v37==(957 -(892 + 65))) then v38,v39,v40,v41=v1(v16,v18,v18 + (7 -(3 + 1)) );v18=v18 + (9 -5) ;v37=1 -0 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1;local v45=(v20(v43,(1 -0) + 0 ,79 -59 ) * ((954 -(802 + 150))^(85 -53))) + v42 ;local v46=v20(v43,(475 -(145 + 293)) -16 ,23 + 8 );local v47=((v20(v43,1029 -(291 + 624 + 82) )==(2 -1)) and  -(1 + 0)) or (1 -0) ;if (v46==(1187 -(1069 + 97 + 21))) then if (v45==(0 -0)) then return v47 * 0 ;else local v91=0 -(430 -(44 + 386)) ;while true do if (v91==(0 + 0)) then v46=1 -0 ;v44=(1486 -(998 + 488)) + 0 ;break;end end end elseif (v46==(2838 -(368 + 423))) then return ((v45==(0 -0)) and (v47 * ((19 -(10 + 8))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(1465 -(416 + 26)) ) * (v44 + (v45/((6 -4)^(23 + 29)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(772 -(201 + 571))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1139 -(116 + 1022)) );v18=v18 + v48 ;local v50={};for v64=4 -3 , #v49 do v50[v64]=v2(v1(v3(v49,v64,v64)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=0 + 0 ;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v51==(0 -0)) then local v87=0 + 0 ;local v88;while true do if (v87==(1024 -(706 + 318))) then v88=0;while true do if (v88==(1251 -(721 + 530))) then v52={};v53={};v88=1 -0 ;end if (v88==(1273 -(945 + 326))) then v51=1 -0 ;break;end if (v88~=(2 -1)) then else v54={};v55={v52,v53,nil,v54};v88=398 -(115 + 281) ;end end break;end end end if (v51~=2) then else for v92=2 -1 ,v23() do local v93=0;local v94;local v95;while true do if (v93==(1 + 0)) then while true do if ((1086 -(461 + 625))==v94) then v95=v21();if (v20(v95,1289 -(993 + 295) ,2 -1 )==0) then local v113=0 -0 ;local v114;local v115;local v116;while true do if (v113==(0 + 0)) then v114=v20(v95,2,870 -(550 + 317) );v115=v20(v95,5 -1 ,6);v113=1;end if (v113==1) then local v118=0 -0 ;while true do if ((0 + 0)==v118) then v116={v22(),v22(),nil,nil};if (v114==(0 -0)) then local v290=1769 -(1749 + 20) ;local v291;while true do if (0~=v290) then else v291=0 + 0 ;while true do if (v291==(285 -(134 + 151))) then v116[3]=v22();v116[1669 -(970 + 695) ]=v22();break;end end break;end end elseif (v114==(1 -0)) then v116[2 + 1 ]=v23();elseif (v114==2) then v116[1993 -(582 + 1408) ]=v23() -((6 -4)^16) ;elseif (v114==(3 -0)) then local v379=0 -0 ;local v380;while true do if ((1824 -(1195 + 629))==v379) then v380=0;while true do if (v380~=(0 -0)) then else v116[244 -(187 + 54) ]=v23() -((1 + 1)^(5 + 11)) ;v116[784 -(162 + 618) ]=v22();break;end end break;end end end v118=1 + 0 ;end if (v118==(2 -1)) then v113=2 + 0 ;break;end end end if (v113==2) then if (v20(v115,1 -0 ,115 -(4 + 110) )~=(1 -0)) then else v116[1 + 1 ]=v57[v116[1638 -(1373 + 263) ]];end if (v20(v115,1002 -(451 + 549) ,105 -(17 + 86) )~=(1 + 0)) then else v116[4 -1 ]=v57[v116[3]];end v113=4 -1 ;end if (3==v113) then if (v20(v115,8 -5 ,1387 -(746 + 638) )==(1 + 0)) then v116[5 -1 ]=v57[v116[12 -8 ]];end v52[v92]=v116;break;end end end break;end end break;end if ((341 -(218 + 123))==v93) then local v105=0 + 0 ;local v106;while true do if ((0 -0)~=v105) then else v106=65 -(30 + 35) ;while true do if (0~=v106) then else v94=1581 -(1535 + 46) ;v95=nil;v106=1258 -(1043 + 214) ;end if (v106==1) then v93=1 + 0 ;break;end end break;end end end end end for v96=1213 -(323 + 889) ,v23() do v53[v96-(1 + 0) ]=v28();end return v55;end if (v51==(561 -(306 + 254))) then local v89=0 + 0 ;local v90;while true do if ((320 -(53 + 267))==v89) then v90=0;while true do if (v90==(0 + 0)) then v56=v23();v57={};v90=1 -0 ;end if (v90~=(414 -(15 + 398))) then else for v108=1468 -(899 + 568) ,v56 do local v109=0;local v110;local v111;local v112;while true do if ((1 + 0)==v109) then v112=nil;while true do if (0==v110) then local v120=0 -0 ;local v121;while true do if (v120~=0) then else v121=0;while true do if (v121~=1) then else v110=1 + 0 ;break;end if (v121~=(0 + 0)) then else v111=v21();v112=nil;v121=851 -(20 + 830) ;end end break;end end end if (v110==1) then if (v111==(2 -1)) then v112=v21()~=(603 -(268 + 335)) ;elseif (v111==(292 -(60 + 230))) then v112=v24();elseif (v111==(575 -(426 + 146))) then v112=v25();end v57[v108]=v112;break;end end break;end if ((0 + 0)~=v109) then else local v117=1456 -(282 + 1174) ;while true do if (v117==1) then v109=1 + 0 ;break;end if (v117~=(738 -(542 + 196))) then else v110=0 -0 ;v111=nil;v117=1 + 0 ;end end end end end v55[2 + 1 ]=v21();v90=1 + 1 ;end if (v90~=(4 -2)) then else v51=813 -(569 + 242) ;break;end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[2];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v85=0,v74 do if (v85>=v68) then v72[v85-v68 ]=v73[v85 + 1 ];else v76[v85]=v73[v85 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v86=0;while true do if (1==v86) then if (v79<=34) then if (v79<=16) then if (v79<=7) then if (v79<=3) then if (v79<=1) then if (v79==0) then v76[v78[2]]=v76[v78[3]];else local v131=0;local v132;local v133;local v134;local v135;while true do if (v131==1) then v71=(v134 + v132) -1 ;v135=0;v131=2;end if (v131==2) then for v329=v132,v71 do local v330=0;while true do if (v330==0) then v135=v135 + 1 ;v76[v329]=v133[v135];break;end end end break;end if (v131==0) then v132=v78[2];v133,v134=v69(v76[v132](v13(v76,v132 + 1 ,v78[3])));v131=1;end end end elseif (v79>2) then v76[v78[2]]=v59[v78[3]];else v76[v78[2]]={};end elseif (v79<=5) then if (v79>4) then v76[v78[2]]=v60[v78[3]];else local v141=0;local v142;while true do if (v141==0) then v142=v78[2];v76[v142]=v76[v142]();break;end end end elseif (v79==6) then if (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v143=v78[3];local v144=v76[v143];for v228=v143 + 1 ,v78[4] do v144=v144   .. v76[v228] ;end v76[v78[2]]=v144;end elseif (v79<=11) then if (v79<=9) then if (v79==8) then local v146=v78[2];local v147={v76[v146](v76[v146 + 1 ])};local v148=0;for v229=v146,v78[4] do local v230=0;while true do if (0==v230) then v148=v148 + 1 ;v76[v229]=v147[v148];break;end end end else local v149=v78[2];local v150=v78[4];local v151=v149 + 2 ;local v152={v76[v149](v76[v149 + 1 ],v76[v151])};for v231=1,v150 do v76[v151 + v231 ]=v152[v231];end local v153=v152[1];if v153 then v76[v151]=v153;v70=v78[3];else v70=v70 + 1 ;end end elseif (v79>10) then local v154=0;local v155;while true do if (v154==0) then v155=v78[2];v76[v155]=v76[v155](v13(v76,v155 + 1 ,v78[3]));break;end end else v76[v78[2]]=v78[3]~=0 ;end elseif (v79<=13) then if (v79==12) then v76[v78[2]]=v78[3]~=0 ;else local v158=0;local v159;while true do if (0==v158) then v159=v78[2];v76[v159](v76[v159 + 1 ]);break;end end end elseif (v79<=14) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79>15) then do return v76[v78[2]];end elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=25) then if (v79<=20) then if (v79<=18) then if (v79>17) then local v162=0;local v163;while true do if (v162==0) then v163=v78[2];v76[v163](v13(v76,v163 + 1 ,v78[3]));break;end end else local v164=0;local v165;while true do if (0==v164) then v165=v78[2];v76[v165](v13(v76,v165 + 1 ,v78[3]));break;end end end elseif (v79>19) then v76[v78[2]]();else v76[v78[2]]=v29(v67[v78[3]],nil,v60);end elseif (v79<=22) then if (v79==21) then v76[v78[2]]=v60[v78[3]];elseif (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=23) then local v169=0;local v170;local v171;while true do if (v169==1) then for v334=v170 + 1 ,v78[4] do v171=v171   .. v76[v334] ;end v76[v78[2]]=v171;break;end if (v169==0) then v170=v78[3];v171=v76[v170];v169=1;end end elseif (v79==24) then v76[v78[2]]=v76[v78[3]][v78[4]];else local v264=v78[2];local v265={};for v303=1, #v75 do local v304=0;local v305;while true do if (v304==0) then v305=v75[v303];for v373=0, #v305 do local v374=v305[v373];local v375=v374[1];local v376=v374[2];if ((v375==v76) and (v376>=v264)) then local v381=0;while true do if (v381==0) then v265[v376]=v375[v376];v374[1]=v265;break;end end end end break;end end end end elseif (v79<=29) then if (v79<=27) then if (v79==26) then local v172=v67[v78[3]];local v173;local v174={};v173=v10({},{__index=function(v234,v235) local v236=v174[v235];return v236[1][v236[2]];end,__newindex=function(v237,v238,v239) local v240=0;local v241;while true do if (v240==0) then v241=v174[v238];v241[1][v241[2]]=v239;break;end end end});for v242=1,v78[4] do v70=v70 + 1 ;local v243=v66[v70];if (v243[1]==62) then v174[v242-1 ]={v76,v243[3]};else v174[v242-1 ]={v59,v243[3]};end v75[ #v75 + 1 ]=v174;end v76[v78[2]]=v29(v172,v173,v60);else v76[v78[2]]=v29(v67[v78[3]],nil,v60);end elseif (v79==28) then v70=v78[3];else do return v76[v78[2]];end end elseif (v79<=31) then if (v79==30) then v76[v78[2]]=v59[v78[3]];else local v180=0;local v181;local v182;local v183;while true do if (v180==1) then v183={};v182=v10({},{__index=function(v337,v338) local v339=v183[v338];return v339[1][v339[2]];end,__newindex=function(v340,v341,v342) local v343=v183[v341];v343[1][v343[2]]=v342;end});v180=2;end if (v180==2) then for v345=1,v78[4] do v70=v70 + 1 ;local v346=v66[v70];if (v346[1]==62) then v183[v345-1 ]={v76,v346[3]};else v183[v345-1 ]={v59,v346[3]};end v75[ #v75 + 1 ]=v183;end v76[v78[2]]=v29(v181,v182,v60);break;end if (v180==0) then v181=v67[v78[3]];v182=nil;v180=1;end end end elseif (v79<=32) then local v184=0;local v185;local v186;while true do if (v184==1) then v76[v185 + 1 ]=v186;v76[v185]=v186[v78[4]];break;end if (v184==0) then v185=v78[2];v186=v76[v78[3]];v184=1;end end elseif (v79>33) then local v266=0;local v267;local v268;local v269;while true do if (v266==1) then v269=v78[3];for v364=1,v269 do v268[v364]=v76[v267 + v364 ];end break;end if (v266==0) then v267=v78[2];v268=v76[v267];v266=1;end end else v70=v78[3];end elseif (v79<=51) then if (v79<=42) then if (v79<=38) then if (v79<=36) then if (v79>35) then do return;end else local v187=v78[2];local v188,v189=v69(v76[v187](v13(v76,v187 + 1 ,v78[3])));v71=(v189 + v187) -1 ;local v190=0;for v245=v187,v71 do v190=v190 + 1 ;v76[v245]=v188[v190];end end elseif (v79==37) then local v191=0;local v192;while true do if (v191==0) then v192=v78[2];v76[v192]=v76[v192](v13(v76,v192 + 1 ,v78[3]));break;end end else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=40) then if (v79>39) then local v195=v78[2];v76[v195](v76[v195 + 1 ]);else local v196=0;local v197;while true do if (v196==0) then v197=v78[2];v76[v197]=v76[v197](v76[v197 + 1 ]);break;end end end elseif (v79>41) then v76[v78[2]]=v78[3];elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=46) then if (v79<=44) then if (v79>43) then v76[v78[2]][v78[3]]=v78[4];elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==45) then local v202=v78[2];v76[v202]=v76[v202](v76[v202 + 1 ]);elseif  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=48) then if (v79==47) then v76[v78[2]]=v78[3];else local v206=0;local v207;local v208;while true do if (v206==1) then v76[v207 + 1 ]=v208;v76[v207]=v208[v78[4]];break;end if (v206==0) then v207=v78[2];v208=v76[v78[3]];v206=1;end end end elseif (v79<=49) then local v209=v78[2];local v210=v78[4];local v211=v209 + 2 ;local v212={v76[v209](v76[v209 + 1 ],v76[v211])};for v248=1,v210 do v76[v211 + v248 ]=v212[v248];end local v213=v212[1];if v213 then local v274=0;while true do if (v274==0) then v76[v211]=v213;v70=v78[3];break;end end else v70=v70 + 1 ;end elseif (v79>50) then local v275=v78[2];v76[v275]=v76[v275]();else local v277=v78[2];local v278=v76[v277];local v279=v78[3];for v324=1,v279 do v278[v324]=v76[v277 + v324 ];end end elseif (v79<=60) then if (v79<=55) then if (v79<=53) then if (v79>52) then do return;end elseif  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==54) then v76[v78[2]]={};else local v215=0;local v216;while true do if (0==v215) then v216=v78[2];v76[v216]=v76[v216](v13(v76,v216 + 1 ,v71));break;end end end elseif (v79<=57) then if (v79>56) then local v217=v78[2];local v218=v76[v217];for v251=v217 + 1 ,v78[3] do v7(v218,v76[v251]);end else for v252=v78[2],v78[3] do v76[v252]=nil;end end elseif (v79<=58) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79==59) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v281=0;local v282;while true do if (v281==0) then v282=v78[2];v76[v282]=v76[v282](v13(v76,v282 + 1 ,v71));break;end end end elseif (v79<=64) then if (v79<=62) then if (v79>61) then v76[v78[2]]=v76[v78[3]];elseif (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>63) then v76[v78[2]][v78[3]]=v78[4];else for v254=v78[2],v78[3] do v76[v254]=nil;end end elseif (v79<=66) then if (v79==65) then local v225=v78[2];local v226={v76[v225](v76[v225 + 1 ])};local v227=0;for v256=v225,v78[4] do local v257=0;while true do if (v257==0) then v227=v227 + 1 ;v76[v256]=v226[v227];break;end end end elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=67) then v76[v78[2]]();elseif (v79>68) then local v285=0;local v286;while true do if (v285==0) then v286=v78[2];do return v13(v76,v286,v286 + v78[3] );end break;end end else local v287=0;local v288;local v289;while true do if (v287==1) then for v367=1, #v75 do local v368=0;local v369;while true do if (v368==0) then v369=v75[v367];for v383=0, #v369 do local v384=0;local v385;local v386;local v387;while true do if (v384==1) then v387=v385[2];if ((v386==v76) and (v387>=v288)) then local v396=0;while true do if (v396==0) then v289[v387]=v386[v387];v385[1]=v289;break;end end end break;end if (v384==0) then v385=v369[v383];v386=v385[1];v384=1;end end end break;end end end break;end if (v287==0) then v288=v78[2];v289={};v287=1;end end end v70=v70 + 1 ;break;end if (v86==0) then v78=v66[v70];v79=v78[1];v86=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
