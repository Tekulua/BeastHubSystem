--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v85=0;local v86;while true do if (v85==0) then v86=v2(v0(v30,16));if v19 then local v120=0;local v121;while true do if (v120==1) then return v121;end if (v120==0) then v121=v5(v86,v19);v19=nil;v120=1;end end else return v86;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-((1 + 1) -1)) -(v32-(620 -(555 + (941 -(282 + 595)))))) + (932 -(857 + 74)))) ;return v87-(v87%(569 -(367 + 201))) ;else local v88=2^(v32-(928 -(214 + 713))) ;return (((v31%(v88 + v88))>=v88) and 1) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + (2 -0) ;return (v36 * 256) + v35 ;end local function v23() local v37=0;local v38;local v39;local v40;local v41;while true do if (v37==1) then return (v41 * (16778281 -((1025 -(892 + 65)) + 997))) + (v40 * ((159367 -92561) -((417 -191) + 1044))) + (v39 * 256) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 + 0 ;v37=1 + 0 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 -0 ;local v45=(v20(v43,351 -(87 + (575 -312)) ,200 -(67 + 113) ) * ((2 + 0 + 0)^32)) + v42 ;local v46=v20(v43,21,75 -44 );local v47=((v20(v43,24 + 8 )==1) and  -1) or (3 -2) ;if (v46==(952 -(802 + 150))) then if (v45==(0 -(0 -0))) then return v47 * (0 -0) ;else v46=1 + 0 + 0 ;v44=997 -(915 + 82) ;end elseif (v46==((6587 -(368 + 423)) -3749)) then return ((v45==(0 + 0)) and (v47 * (1/0))) or (v47 * NaN) ;end return v8(v47,v46-(1344 -321) ) * (v44 + (v45/(((3736 -2547) -((1087 -(10 + 8)) + 118))^(117 -(249 -184))))) ;end local function v25(v48) local v49=442 -((1554 -(116 + 1022)) + 26) ;local v50;local v51;while true do if ((6 -4)==v49) then v51={};for v110=4 -3 , #v50 do v51[v110]=v2(v1(v3(v50,v110,v110)));end v49=2 + 0 + 1 ;end if (v49==(1 -0)) then v50=v3(v16,v18,(v18 + v48) -((1602 -1163) -(145 + 293)) );v18=v18 + v48 ;v49=432 -(44 + 386) ;end if (v49==((5287 -3798) -(998 + 488))) then return v6(v51);end if (v49==(0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==(0 + 0)) then return "";end end v49=773 -(201 + 571) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 0 -0 ;end)();local v90=(function() return;end)();local v91=(function() return;end)();while true do if ( #"~"==v89) then if (v90== #",") then v91=(function() return v92()~=(651 -(494 + 157)) ;end)();elseif (v90==(3 -1)) then v91=(function() return v93();end)();elseif (v90== #"-19") then v91=(function() return v94();end)();end v95[v96]=(function() return v91;end)();break;end if (v89~=0) then else local v117=(function() return 0 + 0 ;end)();local v118=(function() return;end)();while true do if (v117~=(0 + 0)) then else v118=(function() return 0;end)();while true do if (v118~=1) then else v89=(function() return  #"[";end)();break;end if (v118~=(0 + 0)) then else v90=(function() return v92();end)();v91=(function() return nil;end)();v118=(function() return 1;end)();end end break;end end end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v53=(function() return function(v97,v98,v99) local v100=(function() return 836 -(660 + 176) ;end)();local v101=(function() return;end)();while true do if (v100~=0) then else v101=(function() return 0;end)();while true do if (v101~=0) then else local v122=(function() return 0 + 0 ;end)();while true do if (v122==(202 -(14 + 188))) then v97[v98-#"!" ]=(function() return v99();end)();return v97,v98,v99;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v67= #"|",v58 do FlatIdent_7F35E,Type,Cons,v21,v24,v25,v59,v67=(function() return v52(FlatIdent_7F35E,Type,Cons,v21,v24,v25,v59,v67);end)();end v57[ #"xnx"]=(function() return v21();end)();for v68= #"\\",v23() do local v69=(function() return v21();end)();if (v20(v69, #"!", #",")==0) then local v105=(function() return 675 -(534 + 141) ;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v105~=1) then else local v119=(function() return 0;end)();while true do if (v119==(1 + 0)) then v105=(function() return 2 + 0 ;end)();break;end if (v119==(0 + 0)) then v108=(function() return nil;end)();v109=(function() return nil;end)();v119=(function() return 1;end)();end end end if ((0 -0)==v105) then v106=(function() return 0;end)();v107=(function() return nil;end)();v105=(function() return 1;end)();end if (v105==(2 -0)) then while true do if (v106==(5 -3)) then local v123=(function() return 0 + 0 ;end)();local v124=(function() return;end)();while true do if (v123==(0 + 0)) then v124=(function() return 396 -(115 + 281) ;end)();while true do if (v124==1) then v106=(function() return  #"xnx";end)();break;end if ((0 -0)~=v124) then else if (v20(v108, #"~", #"}")== #"~") then v109[2 + 0 ]=(function() return v59[v109[4 -2 ]];end)();end if (v20(v108,7 -5 ,869 -(550 + 317) )== #".") then v109[ #"asd"]=(function() return v59[v109[ #"asd"]];end)();end v124=(function() return 1;end)();end end break;end end end if (v106~= #"|") then else local v125=(function() return 0 -0 ;end)();while true do if (v125==(0 -0)) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 -0)) then local v131=(function() return 0;end)();local v132=(function() return;end)();while true do if (0~=v131) then else v132=(function() return 285 -(134 + 151) ;end)();while true do if (v132==(1665 -(970 + 695))) then v109[ #"91("]=(function() return v22();end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v107== #"<") then v109[ #"xnx"]=(function() return v23();end)();elseif (v107==2) then v109[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v107== #"19(") then local v367=(function() return 0 -0 ;end)();local v368=(function() return;end)();while true do if (v367==0) then v368=(function() return 0;end)();while true do if (v368~=0) then else v109[ #"19("]=(function() return v23() -(2^(2006 -(582 + 1408))) ;end)();v109[ #"0313"]=(function() return v22();end)();break;end end break;end end end v125=(function() return 3 -2 ;end)();end if (1~=v125) then else v106=(function() return 2 -0 ;end)();break;end end end if (v106==0) then local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126~=(0 -0)) then else v127=(function() return 0;end)();while true do if (v127==1) then v106=(function() return  #"{";end)();break;end if (v127==(1824 -(1195 + 629))) then v107=(function() return v20(v69,2, #"xxx");end)();v108=(function() return v20(v69, #"xnxx",6);end)();v127=(function() return 1;end)();end end break;end end end if (v106~= #"19(") then else if (v20(v108, #"xxx", #"xnx")~= #"/") then else v109[ #"0836"]=(function() return v59[v109[ #"?id="]];end)();end v54[v68]=(function() return v109;end)();break;end end break;end end end end for v70= #"!",v23() do v55,v70,v28=(function() return v53(v55,v70,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1 -0 ];local v65=v61[2];local v66=v61[244 -(187 + 54) ];return function(...) local v71=v64;local v72=v65;local v73=v66;local v74=v27;local v75=1740 -(404 + 1335) ;local v76= -1;local v77={};local v78={...};local v79=v12("#",...) -(781 -(162 + 618)) ;local v80={};local v81={};for v102=0 + 0 ,v79 do if (v102>=v73) then v77[v102-v73 ]=v78[v102 + (3 -2) + 0 ];else v81[v102]=v78[v102 + 1 + 0 ];end end local v82=(v79-v73) + 1 ;local v83;local v84;while true do v83=v71[v75];v84=v83[338 -(10 + 327) ];if ((v84<=(72 -38)) or (2684==3404)) then if (v84<=(26 -10)) then if (v84<=(3 + 4)) then if ((548<4981) and (v84<=3)) then if (v84<=(1 + 0)) then if (v84==(1636 -(1373 + 263))) then v81[v83[1002 -(62 + 389 + (1251 -702)) ]][v83[12 -9 ]]=v81[v83[4]];else local v135=v83[1 + 0 + 1 ];local v136=v81[v135];local v137=v83[4 -1 ];for v230=1,v137 do v136[v230]=v81[v135 + v230 ];end end elseif (v84==(471 -(270 + 199))) then local v138=v72[v83[4 -1 ]];local v139;local v140={};v139=v10({},{__index=function(v233,v234) local v235=1384 -(746 + 638) ;local v236;while true do if (v235==(0 + 0)) then v236=v140[v234];return v236[1 -0 ][v236[343 -(218 + 123) ]];end end end,__newindex=function(v237,v238,v239) local v240=v140[v238];v240[1582 -(1535 + 46) ][v240[2 + 0 ]]=v239;end});for v242=1 + 0 ,v83[564 -(306 + 254) ] do v75=v75 + 1 + 0 ;local v243=v71[v75];if (v243[1 -0 ]==(1483 -(113 + 786 + 568))) then v140[v242-(1791 -(1010 + 780)) ]={v81,v243[606 -(268 + 335) ]};else v140[v242-1 ]={v62,v243[575 -(426 + 146) ]};end v80[ #v80 + (1 -0) ]=v140;end v81[v83[1 + 1 ]]=v29(v138,v139,v63);else do return;end end elseif (v84<=(1461 -(282 + 1174))) then if (v84==(815 -((1813 -(485 + 759)) + 242))) then local v142=v83[4 -2 ];local v143=v81[v83[8 -(11 -6) ]];v81[v142 + 1 + (1189 -(442 + 747)) ]=v143;v81[v142]=v143[v83[4]];else v81[v83[1026 -(706 + 318) ]][v83[3 + 0 ]]=v83[4];end elseif ((590<=3199) and (v84==(1257 -(721 + 530)))) then local v149=1271 -(945 + 326) ;local v150;while true do if (v149==(0 -0)) then v150=v83[2 + 0 ];v81[v150](v13(v81,v150 + (471 -(381 + 89)) ,v83[703 -((1406 -(832 + 303)) + 429) ]));break;end end else local v151=v83[(948 -(88 + 858)) + 0 ];v81[v151]=v81[v151]();end elseif (v84<=(1511 -(1408 + 92))) then if ((v84<=(1095 -(461 + 191 + 434))) or (4793<30)) then if (v84>(1296 -(993 + 295))) then if (v81[v83[3 -(1 + 0) ]]==v83[1 + 3 ]) then v75=v75 + (1172 -(418 + 32 + 721)) ;else v75=v83[2 + 1 ];end else v81[v83[(790 -(766 + 23)) + 1 ]]=v29(v72[v83[1 + 2 ]],nil,v63);end elseif (v84==(3 + 7)) then v81[v83[1 + 1 ]]=v81[v83[532 -(406 + 123) ]][v83[1773 -(1749 + 20) ]];else do return v81[v83[1 + 1 ]];end end elseif (v84<=((6590 -5255) -(1249 + 73))) then if (v84>(5 + 7)) then local v156=v83[2];v81[v156](v13(v81,v156 + (1 -0) ,v83[7 -(10 -6) ]));else v81[v83[1147 -(466 + 679) ]]=v81[v83[(20 -14) -3 ]][v83[11 -7 ]];end elseif ((v84<=(1914 -(106 + 1794))) or (1696<=1059)) then local v159=v83[1 + 1 ];local v160=v83[2 + 2 ];local v161=v159 + ((1078 -(1036 + 37)) -3) ;local v162={v81[v159](v81[v159 + (115 -(4 + 110)) ],v81[v161])};for v245=585 -(57 + 527) ,v160 do v81[v161 + v245 ]=v162[v245];end local v163=v162[1428 -(30 + 11 + 1386) ];if v163 then v81[v161]=v163;v75=v83[106 -(17 + 86) ];else v75=v75 + 1 + (0 -0) ;end elseif (v84==((26 + 7) -18)) then local v266=0 -0 ;local v267;while true do if (v266==((1646 -(641 + 839)) -((1035 -(910 + 3)) + 44))) then v267=v83[2 -0 ];v81[v267]=v81[v267](v81[v267 + (3 -2) ]);break;end end else v81[v83[4 -2 ]]=v81[v83[3 + 0 ]];end elseif ((2343==2343) and (v84<=(31 -(1690 -(1466 + 218))))) then if (v84<=(3 + 17)) then if ((v84<=(36 -18)) or (1043>3591)) then if (v84==(3 + 14)) then v81[v83[67 -(30 + 35) ]]=v83[3 + 0 ];else v81[v83[5 -3 ]]();end elseif (v84==(63 -44)) then v81[v83[(579 + 680) -(1043 + 214) ]]=v83[11 -8 ];else local v168=1212 -(323 + 889) ;local v169;local v170;while true do if ((v168==(2 -1)) or (2890>=4079)) then for v339=v169 + (581 -(361 + 219)) ,v83[1436 -(797 + (1784 -(556 + 592))) ] do v7(v170,v81[v339]);end break;end if (v168==(320 -(53 + 267))) then v169=v83[1 + 1 ];v170=v81[v169];v168=414 -(15 + 398) ;end end end elseif (v84<=((358 + 646) -(18 + 964))) then if ((4474<=4770) and (v84==(78 -57))) then if v81[v83[4 -2 ]] then v75=v75 + 1 + (808 -(329 + 479)) ;else v75=v83[2 + 1 ];end else local v171=850 -(20 + 830) ;local v172;while true do if ((v171==(0 + 0)) or (4942==3903)) then v172=v83[128 -(116 + 10) ];do return v13(v81,v172,v172 + v83[1279 -(316 + 960) ] );end break;end end end elseif (v84<=(2 + 21)) then local v173=v83[740 -(542 + 196) ];local v174={};for v248=1 -0 , #v80 do local v249=0 + 0 ;local v250;while true do if (v249==((854 -(174 + 680)) + (0 -0))) then v250=v80[v248];for v351=0, #v250 do local v352=v250[v351];local v353=v352[1 + 0 ];local v354=v352[4 -2 ];if (((v353==v81) and (v354>=v173)) or (248>4845)) then v174[v354]=v353[v354];v352[1]=v174;end end break;end end end elseif (v84==(61 -37)) then local v271=v83[1553 -((2333 -1207) + 425) ];v81[v271](v81[v271 + (406 -(118 + 287)) ]);else local v272=v83[2 -0 ];local v273,v274=v74(v81[v272](v13(v81,v272 + (3 -2) ,v83[3])));v76=(v274 + v272) -(326 -(45 + 280)) ;local v275=0;for v309=v272,v76 do local v310=1121 -(118 + 1003) ;while true do if ((1569==1569) and (v310==(0 -0))) then v275=v275 + (378 -(142 + 235)) ;v81[v309]=v273[v275];break;end end end end elseif ((v84<=(131 -102)) or (4927<=3221)) then if (v84<=(6 + 21)) then if ((v84==(1003 -(553 + 424))) or (1780>2787)) then v75=v83[5 -2 ];else v81[v83[2 + 0 + 0 ]]=v83[3 + 0 ]~=(0 + 0) ;end elseif (v84==(12 + 16)) then v81[v83[2 + 0 ]]={};else local v178=v83[4 -2 ];local v179=v81[v83[7 -4 ]];v81[v178 + (2 -1) ]=v179;v81[v178]=v179[v83[2 + (741 -(396 + 343)) ]];end elseif (v84<=31) then if ((v84>(144 -114)) or (3937<=1230)) then v81[v83[2 + 0 ]]=v63[v83[756 -(239 + 514) ]];else v81[v83[1 + 1 ]]=v62[v83[1332 -(797 + 532) ]];end elseif (v84<=(544 -(409 + 103))) then local v187=v83[2 + 0 ];v81[v187]=v81[v187](v81[v187 + 1 + 0 + 0 ]);elseif ((v84==(76 -43)) or (2637<1706)) then if (v81[v83[1 + 1 ]]==v83[1206 -(373 + 829) ]) then v75=v75 + (732 -(476 + 255)) ;else v75=v83[1133 -(369 + 761) ];end else local v276=0 + 0 ;local v277;while true do if (v276==0) then v277=v83[2 -0 ];v81[v277]=v81[v277](v13(v81,v277 + 1 ,v76));break;end end end elseif ((v84<=(98 -46)) or (2669<=2409)) then if ((v84<=(281 -(64 + 174))) or (1401>4696)) then if ((v84<=(6 + (1509 -(29 + 1448)))) or (3280<1321)) then if (v84<=(53 -(1406 -(135 + 1254)))) then if (v84>(371 -(144 + 192))) then do return v81[v83[218 -(42 + 174) ]];end else local v189=0 + 0 ;local v190;local v191;while true do if ((4927>=2303) and (v189==0)) then v190=v83[(7 -5) + 0 ];v191={};v189=1 + 0 ;end if ((3462>=1032) and (v189==(1505 -(363 + 1141)))) then for v342=1581 -((5523 -4340) + 397) , #v80 do local v343=v80[v342];for v357=0 -0 , #v343 do local v358=v343[v357];local v359=v358[1 + 0 ];local v360=v358[2];if ((v359==v81) and (v360>=v190)) then v191[v360]=v359[v360];v358[1 + 0 ]=v191;end end end break;end end end elseif ((v84>(129 -92)) or (1077>=2011)) then if v81[v83[(1318 + 659) -(1913 + 62) ]] then v75=v75 + (1 -0) ;else v75=v83[2 + (1528 -(389 + 1138)) ];end else v81[v83[(580 -(102 + 472)) -4 ]]=v63[v83[1251 -(111 + 1137) ]];end elseif (v84<=(105 -65)) then if (v84==(1972 -(565 + 1368))) then local v194=0 + 0 ;local v195;while true do if (v194==(0 -0)) then v195=v83[1663 -(1477 + 184) ];v81[v195]=v81[v195](v13(v81,v195 + (1 -0) ,v83[3 + 0 + 0 + 0 ]));break;end end elseif (v81[v83[2]]==v81[v83[860 -(564 + 292) ]]) then v75=v75 + ((4 + 0) -3) ;else v75=v83[6 -3 ];end elseif (v84<=(70 -29)) then local v196=v83[5 -(1548 -(320 + 1225)) ];local v197=v83[885 -(614 + 267) ];local v198=v196 + (306 -(244 + 60)) ;local v199={v81[v196](v81[v196 + (477 -(41 + 435)) ],v81[v198])};for v251=1002 -((1669 -731) + 63) ,v197 do v81[v198 + v251 ]=v199[v251];end local v200=v199[1 + 0 ];if v200 then local v280=0 -0 ;while true do if ((1125 -(936 + 116 + 73))==v280) then v81[v198]=v200;v75=v83[1 + 2 ];break;end end else v75=v75 + (1614 -(1565 + 48)) ;end elseif (v84==(26 + 16)) then local v281=v72[v83[(2605 -(157 + 1307)) -((2641 -(821 + 1038)) + 356) ]];local v282;local v283={};v282=v10({},{__index=function(v314,v315) local v316=v283[v315];return v316[2 -1 ][v316[4 -2 ]];end,__newindex=function(v317,v318,v319) local v320=v283[v318];v320[1][v320[269 -(176 + 91) ]]=v319;end});for v322=2 -1 ,v83[5 -1 ] do local v323=1092 -(975 + 117) ;local v324;while true do if ((1875 -(157 + 1718))==v323) then v75=v75 + 1 + 0 ;v324=v71[v75];v323=3 -2 ;end if ((2 -1)==v323) then if (v324[3 -2 ]==(1034 -(697 + 321))) then v283[v322-(2 -1) ]={v81,v324[6 -3 ]};else v283[v322-(1 + 0) ]={v62,v324[1861 -(673 + 1185) ]};end v80[ #v80 + (2 -(1 + 0)) ]=v283;break;end end end v81[v83[1229 -(322 + 905) ]]=v29(v281,v282,v63);else do return;end end elseif ((1543<2415) and (v84<=(658 -(602 + 9)))) then if (v84<=((3058 -1824) -(449 + 740))) then if (v84==(916 -(826 + (1072 -(834 + 192))))) then for v254=v83[1 + 1 + 0 ],v83[3 -0 ] do v81[v254]=nil;end else v81[v83[(244 + 705) -(6 + 239 + 702) ]]();end elseif (v84>(145 -99)) then v81[v83[(1 -0) + 1 ]]=v29(v72[v83[1883 -(446 + 1434) ]],nil,v63);else v81[v83[2]]=v83[1901 -(260 + 1638) ]~=(440 -(382 + (362 -(300 + 4)))) ;end elseif (v84<=((42 + 114) -107)) then if (v84==(40 + (20 -12))) then local v203=v83[2];local v204={v81[v203](v81[v203 + (2 -1) ])};local v205=0 -0 ;for v256=v203,v83[1209 -(902 + 303) ] do v205=v205 + (1 -0) ;v81[v256]=v204[v205];end else local v206=v83[4 -2 ];v81[v206]=v81[v206](v13(v81,v206 + 1 + 0 ,v76));end elseif ((v84<=(1740 -(1121 + 569))) or (4444<2015)) then v81[v83[216 -(22 + (554 -(112 + 250))) ]][v83[686 -(483 + 200) ]]=v83[1467 -(1404 + 59) ];elseif (v84==(139 -(36 + 52))) then local v285=v83[2 -0 ];local v286,v287=v74(v81[v285](v13(v81,v285 + (2 -1) + 0 ,v83[8 -(3 + 2) ])));v76=(v287 + v285) -(1 + 0) ;local v288=765 -(243 + 225 + 297) ;for v325=v285,v76 do local v326=0 + 0 + 0 ;while true do if (((562 -(334 + 228))==v326) or (4200==2332)) then v288=v288 + 1 + 0 ;v81[v325]=v286[v288];break;end end end else local v289=v83[6 -4 ];local v290=v81[v289];for v327=v289 + 1 + 0 ,v83[6 -3 ] do v7(v290,v81[v327]);end end elseif (v84<=(110 -(25 + 24))) then if ((v84<=(16 + 30 + 10)) or (1278>=1316)) then if (v84<=(155 -101)) then if (v84==(289 -(141 + 95))) then v75=v83[3 + 0 ];else local v211=v83[(1416 -(1001 + 413)) + (0 -0) ];v81[v211]=v81[v211](v13(v81,v211 + (2 -1) ,v83[6 -3 ]));end elseif ((1082==1082) and (v84>(83 -28))) then local v213=(882 -(244 + 638)) + 0 ;local v214;local v215;local v216;while true do if (v213==(2 -(694 -(627 + 66)))) then v216=v83[3 + (0 -0) ];for v344=1 + 0 ,v216 do v215[v344]=v81[v214 + v344 ];end break;end if ((1328<=4878) and (v213==(0 -0))) then v214=v83[2 + 0 ];v215=v81[v214];v213=164 -(92 + (673 -(512 + 90))) ;end end else local v217=0 + 0 ;local v218;local v219;while true do if ((1 + 0)==v217) then for v347=v218 + 1 + 0 ,v83[6 -2 ] do v219=v219   .. v81[v347] ;end v81[v83[(2673 -(1665 + 241)) -(574 + 191) ]]=v219;break;end if (v217==(0 + 0)) then v218=v83[(724 -(373 + 344)) -4 ];v219=v81[v218];v217=1 + 0 ;end end end elseif (v84<=(907 -(254 + 595))) then if (v84==(899 -(497 + 345))) then if  not v81[v83[128 -(55 + 71) ]] then v75=v75 + 1 + 0 ;else v75=v83[3 -0 ];end else v81[v83[1792 -(259 + 314 + 1217) ]]=v62[v83[8 -5 ]];end elseif ((4087>=1355) and (v84<=(3 + 56))) then if (v83[1 + 1 + 0 ]==v81[v83[5 -1 ]]) then v75=v75 + (940 -(714 + 225)) ;else v75=v83[(7 -4) + (0 -0) ];end elseif ((v84>(549 -(457 + 32))) or (590>4650)) then local v293=v83[5 -3 ];v81[v293](v81[v293 + (1 -0) ]);else local v294=0 + (1099 -(35 + 1064)) ;local v295;while true do if (((0 + 0) -(0 -0))==v294) then v295=v83[808 -(118 + 3 + 685) ];v81[v295]=v81[v295]();break;end end end elseif (v84<=(230 -165)) then if (v84<=(111 -(25 + (1259 -(298 + 938))))) then if ((v84>(858 -(588 + 208))) or (3774<=3667)) then if  not v81[v83[1 + 1 ]] then v75=v75 + (1887 -(927 + 959)) ;else v75=v83[(1265 -(233 + 1026)) -3 ];end else for v259=v83[6 -4 ],v83[656 -(232 + 421) ] do v81[v259]=nil;end end elseif (v84==(1953 -(1569 + 320))) then if (v83[734 -((1682 -(636 + 1030)) + 367 + 349) ]==v81[v83[7 -3 ]]) then v75=v75 + (98 -(11 + 86)) ;else v75=v83[6 -3 ];end else v81[v83[287 -(175 + 110) ]]={};end elseif ((1270<2146) and (v84<=(169 -102))) then if (v84==(172 -106)) then local v223=v83[1 + 2 ];local v224=v81[v223];for v261=v223 + (4 -3) ,v83[1800 -(503 + 1293) ] do v224=v224   .. v81[v261] ;end v81[v83[5 -3 ]]=v224;else v81[v83[2 + 0 ]][v83[1064 -(810 + 251) ]]=v81[v83[3 + 1 + 0 ]];end elseif ((4563>=56) and (v84<=68)) then v81[v83[1 + 1 ]]=v81[v83[257 -(79 + 175) ]];elseif (v84>(63 + 6)) then if (v81[v83[535 -(43 + 146 + 344) ]]==v81[v83[737 -(711 + 2 + 20) ]]) then v75=v75 + (3 -2) ;else v75=v83[862 -((461 -(55 + 166)) + 619) ];end else local v298=v83[1 + 1 ];local v299={v81[v298](v81[v298 + 1 + 0 ])};local v300=1744 -(261 + 1083 + 400) ;for v334=v298,v83[409 -(255 + 150) ] do v300=v300 + 1 + 0 + 0 ;v81[v334]=v299[v300];end end v75=v75 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
