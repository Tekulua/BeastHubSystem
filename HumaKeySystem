--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v85=0;while true do if (v85==0) then v19=v0(v3(v30,1,1));return "";end end else local v86=0;local v87;while true do if (v86==0) then v87=v2(v0(v30,16));if v19 then local v127=v5(v87,v19);v19=nil;return v127;else return v87;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v88=(v31/((5 -(1640 -(1523 + 114)))^(v32-1)))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v88-(v88%(932 -(857 + 74))) ;else local v89=0;local v90;while true do if ((568 -(367 + 181 + 20))==v89) then v90=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v90 + v90))>=v90) and (1 + (0 -0))) or (877 -(282 + 595)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 + 0 ;return (v40 * (3720433 + 13056783)) + (v39 * (66493 -((1648 -756) + 65))) + (v38 * (610 -354)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=(1 + 0) -(0 -0) ;local v44=(v20(v42,351 -(87 + 263) ,200 -(67 + 113 + 0) ) * (2^32)) + v41 ;local v45=v20(v42,(807 -(368 + 423)) + 5 ,75 -(138 -94) );local v46=((v20(v42,24 + 8 )==1) and  -1) or 1 ;if (v45==(0 -(18 -(10 + 8)))) then if (v44==(952 -(802 + 150))) then return v46 * (0 -0) ;else v45=1 -0 ;v43=0 + 0 ;end elseif (v45==(3044 -(915 + 82))) then return ((v44==(0 -0)) and (v46 * ((1 + 0)/(0 -0)))) or (v46 * NaN) ;end return v8(v46,v45-((8501 -6291) -(1069 + 118)) ) * (v43 + (v44/(((446 -(416 + 26)) -(6 -4))^(113 -61)))) ;end local function v25(v47) local v48;if  not v47 then local v91=0 + 0 ;while true do if (v91==(0 -0)) then v47=v23();if (v47==(438 -(145 + (1779 -(998 + 488))))) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;local v49={};for v66=431 -(44 + 123 + 263) , #v48 do v49[v66]=v2(v1(v3(v48,v66,v66)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99) local v92=(function() return 0 -0 ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if (v92~= #",") then else if (v93== #".") then v94=(function() return v95()~=(603 -(268 + 335)) ;end)();elseif (v93==2) then v94=(function() return v96();end)();elseif (v93== #"gha") then v94=(function() return v97();end)();end v98[v99]=(function() return v94;end)();break;end if (v92==(0 -0)) then local v123=(function() return 572 -(426 + 146) ;end)();local v124=(function() return;end)();while true do if ((0 + 0)==v123) then v124=(function() return 1456 -(282 + 1174) ;end)();while true do if ((1764 -(454 + 1309))~=v124) then else v92=(function() return  #" ";end)();break;end if (v124==(811 -(569 + 242))) then v93=(function() return v95();end)();v94=(function() return nil;end)();v124=(function() return 1;end)();end end break;end end end end return v92,v93,v94,v95,v96,v97,v98,v99;end;end)();local v51=(function() return function(v100,v101,v102,v103,v104,v105,v106,v107,v108) local v109=(function() return 0 -0 ;end)();local v100=(function() return;end)();local v101=(function() return;end)();while true do local v117=(function() return 0;end)();while true do if (v117==(0 + 0)) then if (v109==(1 -0)) then local v128=(function() return 1024 -(706 + 318) ;end)();while true do if (0~=v128) then else while true do if (v100==(1251 -(721 + 530))) then v101=(function() return v102();end)();if (v103(v101, #"!", #"!")==(0 -0)) then local v133=(function() return 0;end)();local v134=(function() return;end)();local v135=(function() return;end)();local v136=(function() return;end)();local v137=(function() return;end)();while true do if (v133==(1271 -(945 + 326))) then local v276=(function() return 0;end)();local v277=(function() return;end)();while true do if (v276==(0 -0)) then v277=(function() return 285 -(134 + 151) ;end)();while true do if (v277==(1665 -(970 + 695))) then v134=(function() return 0 -0 ;end)();v135=(function() return nil;end)();v277=(function() return 701 -(271 + 429) ;end)();end if (v277==(1 + 0)) then v133=(function() return 1991 -(582 + 1408) ;end)();break;end end break;end end end if (v133==(6 -4)) then while true do if (v134~=0) then else local v368=(function() return 0 -0 ;end)();local v369=(function() return;end)();while true do if (v368==0) then v369=(function() return 0;end)();while true do if ((0 -0)~=v369) then else v135=(function() return v103(v101,2, #"xnx");end)();v136=(function() return v103(v101, #"http",6);end)();v369=(function() return 1825 -(1195 + 629) ;end)();end if (v369==(1289 -(993 + 295))) then v134=(function() return  #"[";end)();break;end end break;end end end if (v134== #"}") then local v370=(function() return 0 -0 ;end)();local v371=(function() return;end)();while true do if (v370==(241 -(187 + 54))) then v371=(function() return 0;end)();while true do if (v371==(781 -(162 + 618))) then v134=(function() return 2;end)();break;end if ((0 + 0)~=v371) then else v137=(function() return {v104(),v104(),nil,nil};end)();if (v135==0) then local v412=(function() return 0;end)();local v413=(function() return;end)();while true do if (v412==(0 + 0)) then v413=(function() return 0 + 0 ;end)();while true do if (v413~=(0 + 0)) then else v137[ #"xxx"]=(function() return v104();end)();v137[ #"asd1"]=(function() return v104();end)();break;end end break;end end elseif (v135== #"<") then v137[ #"asd"]=(function() return v105();end)();elseif (v135==(2 + 0)) then v137[ #"-19"]=(function() return v105() -(2^16) ;end)();elseif (v135~= #"19(") then else local v420=(function() return 529 -(406 + 123) ;end)();while true do if ((1769 -(1749 + 20))~=v420) then else v137[ #"91("]=(function() return v105() -(2^(33 -17)) ;end)();v137[ #".dev"]=(function() return v104();end)();break;end end end v371=(function() return 1 -0 ;end)();end end break;end end end if ((1 + 1)==v134) then local v372=(function() return 1636 -(1373 + 263) ;end)();local v373=(function() return;end)();while true do if (v372==(1000 -(451 + 549))) then v373=(function() return 1145 -(466 + 679) ;end)();while true do if (v373~=(0 + 0)) then else if (v103(v136, #"{", #"~")~= #",") then else v137[2]=(function() return v106[v137[2 -0 ]];end)();end if (v103(v136,2 -0 ,1386 -(746 + 638) )== #"|") then v137[ #"91("]=(function() return v106[v137[ #"gha"]];end)();end v373=(function() return 1 + 0 ;end)();end if (v373~=(1 + 0)) then else v134=(function() return  #"91(";end)();break;end end break;end end end if (v134~= #"91(") then else if (v103(v136, #"xxx", #"-19")~= #"\\") then else v137[ #"asd1"]=(function() return v106[v137[ #".dev"]];end)();end v107[v108]=(function() return v137;end)();break;end end break;end if ((1 -0)~=v133) then else v136=(function() return nil;end)();v137=(function() return nil;end)();v133=(function() return 2;end)();end end end break;end end return v100,v101,v102,v103,v104,v105,v106,v107,v108;end end end if (v109~=(0 -0)) then else local v129=(function() return 0;end)();while true do if (v129==(342 -(218 + 123))) then v109=(function() return 1;end)();break;end if (v129~=(1581 -(1535 + 46))) then else v100=(function() return 584 -(57 + 527) ;end)();v101=(function() return nil;end)();v129=(function() return 1;end)();end end end break;end end end end;end)();local v52=(function() return function(v110,v111,v112) local v113=(function() return 0 + 0 ;end)();local v114=(function() return;end)();while true do if (v113~=(0 + 0)) then else v114=(function() return 560 -(306 + 254) ;end)();while true do if (v114==(0 + 0)) then local v130=(function() return 0 -0 ;end)();local v131=(function() return;end)();while true do if (v130==0) then v131=(function() return 1467 -(899 + 568) ;end)();while true do if (0==v131) then v110[v111-#"," ]=(function() return v112();end)();return v110,v111,v112;end end break;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #".",v57 do FlatIdent_76979,Type,Cons,v21,v24,v25,v58,v68=(function() return v50(FlatIdent_76979,Type,Cons,v21,v24,v25,v58,v68);end)();end v56[ #"asd"]=(function() return v21();end)();for v69= #"!",v23() do FlatIdent_24A02,Descriptor,v21,v20,v22,v23,v58,v53,v69=(function() return v51(FlatIdent_24A02,Descriptor,v21,v20,v22,v23,v58,v53,v69);end)();end for v70= #">",v23() do v54,v70,v28=(function() return v52(v54,v70,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[3 -1 ];local v65=v60[3];return function(...) local v71=v63;local v72=v64;local v73=v65;local v74=v27;local v75=1;local v76= -((5 -3) -1);local v77={};local v78={...};local v79=v12("#",...) -1 ;local v80={};local v81={};for v115=0 -(1948 -(1096 + 852)) ,v79 do if ((v115>=v73) or (2613<=1158)) then v77[v115-v73 ]=v78[v115 + 1 ];else v81[v115]=v78[v115 + 1 ];end end local v82=(v79-v73) + 1 ;local v83;local v84;while true do local v116=0;while true do if (v116==(3 -(1 + 1))) then if (v84<=34) then if (v84<=16) then if (v84<=(6 + 1)) then if (v84<=(1 + (2 -0))) then if ((v84<=(1 -(0 + 0))) or (2364<=1999)) then if ((v84>0) or (4922<194)) then do return v81[v83[67 -(30 + 35) ]];end else v81[v83[2 + 0 ]]=v81[v83[1260 -((1555 -(409 + 103)) + 214) ]][v83[15 -(247 -(46 + 190)) ]];end elseif (v84==(1214 -(323 + 889))) then v81[v83[5 -3 ]]=v81[v83[583 -(361 + 219) ]];else v81[v83[322 -(53 + 267) ]]();end elseif (v84<=(2 + 3)) then if (v84==(417 -(15 + 398))) then local v142=982 -(18 + (1059 -(51 + 44))) ;local v143;local v144;local v145;local v146;while true do if (v142==0) then v143=v83[2];v144,v145=v74(v81[v143](v13(v81,v143 + (3 -2) ,v83[2 + 1 ])));v142=1 + 0 + (1317 -(1114 + 203)) ;end if (v142==(851 -(20 + 830))) then v76=(v145 + v143) -(1 + 0) ;v146=126 -(116 + 10) ;v142=1 + 1 ;end if ((v142==((1466 -(228 + 498)) -(542 + 43 + 153))) or (2091<31)) then for v349=v143,v76 do v146=v146 + (1 -0) ;v81[v349]=v144[v146];end break;end end else v81[v83[1 + 1 ]]();end elseif (v84>(3 + 1 + 2)) then local v147=v83[1 + 1 ];local v148,v149=v74(v81[v147](v13(v81,v147 + 1 ,v83[7 -4 ])));v76=(v149 + v147) -1 ;local v150=0 -0 ;for v230=v147,v76 do v150=v150 + (1552 -(1126 + 425)) ;v81[v230]=v148[v150];end elseif (v81[v83[407 -(118 + (950 -(174 + 489))) ]] or (2430>=4872)) then v75=v75 + (3 -2) ;else v75=v83[1124 -(118 + 1003) ];end elseif ((v84<=(32 -21)) or (4770<1735)) then if (v84<=(386 -(142 + 235))) then if (v84==(36 -28)) then local v151=(0 -0) + 0 ;local v152;while true do if ((977 -(553 + 424))==v151) then v152=v83[3 -1 ];v81[v152]=v81[v152](v81[v152 + 1 + 0 ]);break;end end else local v153=v83[3 + 0 ];local v154=v81[v153];for v233=v153 + (1906 -(830 + 1075)) + 0 ,v83[2 + 2 ] do v154=v154   .. v81[v233] ;end v81[v83[2 + 0 ]]=v154;end elseif (v84==(21 -11)) then local v156=v83[(529 -(303 + 221)) -3 ];v81[v156]=v81[v156](v13(v81,v156 + 1 ,v83[6 -3 ]));else local v158=v83[2];local v159={};for v234=1 + 0 , #v80 do local v235=v80[v234];for v279=1269 -(231 + 1038) , #v235 do local v280=0;local v281;local v282;local v283;while true do if (v280==(0 -0)) then v281=v235[v279];v282=v281[1];v280=754 -(239 + 514) ;end if (((1 + 0)==v280) or (4439<=2350)) then v283=v281[1331 -(797 + 532) ];if ((v282==v81) and (v283>=v158)) then v159[v283]=v282[v283];v281[1 + 0 + 0 ]=v159;end break;end end end end end elseif ((v84<=(5 + 8)) or (4479<4466)) then if (v84==(27 -15)) then do return v81[v83[1204 -(373 + 829) ]];end elseif (v83[(1895 -(171 + 991)) -(476 + 255) ]==v81[v83[1134 -(369 + 761) ]]) then v75=v75 + 1 + (0 -0) ;else v75=v83[5 -2 ];end elseif (v84<=(26 -(32 -20))) then do return;end elseif (v84==((631 -378) -(64 + 140 + 34))) then v81[v83[(3 -2) + (2 -1) ]]=v81[v83[(4 -1) -(0 -0) ]];else local v287=(1584 -(111 + 1137)) -(144 + 192) ;local v288;while true do if (v287==((374 -(91 + 67)) -(42 + 174))) then v288=v83[2 + 0 ];v81[v288]=v81[v288](v13(v81,v288 + 1 ,v83[3 + 0 ]));break;end end end elseif (v84<=(11 + 14)) then if (v84<=20) then if ((2547>1225) and (v84<=(1522 -((1080 -717) + 1141)))) then if (v84>(1597 -(1183 + 397))) then if ((4671>2674) and (v81[v83[5 -3 ]]==v83[3 + 1 ])) then v75=v75 + 1 + 0 ;else v75=v83[1978 -(1913 + 62) ];end elseif  not v81[v83[2 + 0 ]] then v75=v75 + 1 ;else v75=v83[7 -4 ];end elseif ((v84==(5 + 14)) or (3696<3327)) then v81[v83[2]]=v83[1936 -((1088 -(423 + 100)) + 1368) ];elseif ((v81[v83[7 -5 ]]==v81[v83[1665 -(1477 + 184) ]]) or (4542==2970)) then v75=v75 + (1 -0) ;else v75=v83[3 + 0 + 0 ];end elseif ((252<=1977) and (v84<=22)) then if ((v84>(877 -(564 + 292))) or (1436==3775)) then for v236=v83[2 -0 ],v83[8 -5 ] do v81[v236]=nil;end else local v162=304 -(244 + 60) ;local v163;while true do if ((0==v162) or (1618<930)) then v163=v83[2 + 0 ];v81[v163]=v81[v163](v81[v163 + 1 ]);break;end end end elseif (v84<=(63 -40)) then for v238=v83[478 -(41 + 435) ],v83[1004 -(938 + 63) ] do v81[v238]=nil;end elseif (v84>24) then v75=v83[3 + 0 ];else v81[v83[1127 -(936 + 189) ]][v83[3]]=v83[2 + 2 ];end elseif ((4723>4153) and (v84<=(1642 -(1565 + 48)))) then if (v84<=(17 + 10)) then if (v84==(1164 -(782 + 356))) then local v164=v83[269 -(176 + 91) ];local v165={v81[v164](v81[v164 + (2 -1) ])};local v166=0 -0 ;for v240=v164,v83[4] do local v241=(1863 -(326 + 445)) -(975 + 117) ;while true do if (v241==0) then v166=v166 + (1876 -(157 + 1718)) ;v81[v240]=v165[v166];break;end end end else local v167=(0 -0) + 0 ;local v168;local v169;while true do if ((v167==(0 -0)) or (3654>=4654)) then v168=v83[6 -4 ];v169=v81[v168];v167=1019 -(697 + 321) ;end if ((951<=1496) and (v167==(2 -1))) then for v354=v168 + 1 ,v83[5 -2 ] do v7(v169,v81[v354]);end break;end end end elseif ((v84>28) or (1736==571)) then v81[v83[4 -(4 -2) ]]=v61[v83[2 + (2 -1) ]];else local v172=0 -(711 -(530 + 181)) ;local v173;while true do if ((v172==(0 -0)) or (896>4769)) then v173=v83[1229 -((1203 -(614 + 267)) + 905) ];v81[v173]=v81[v173](v13(v81,v173 + 1 ,v76));break;end end end elseif (v84<=(642 -(602 + 9))) then if ((v84==(1219 -(449 + 740))) or (1045<=1020)) then local v174=872 -(826 + 46) ;local v175;while true do if ((v174==((979 -(19 + 13)) -(245 + 702))) or (1160<=328)) then v175=v83[6 -(6 -2) ];v81[v175]=v81[v175](v13(v81,v175 + (2 -1) + 0 ,v76));break;end end else local v176=v72[v83[1901 -(260 + (4679 -3041)) ]];local v177;local v178={};v177=v10({},{__index=function(v242,v243) local v244=440 -(382 + 58) ;local v245;while true do if (v244==(0 -0)) then v245=v178[v243];return v245[1 + 0 ][v245[3 -1 ]];end end end,__newindex=function(v246,v247,v248) local v249=0 -0 ;local v250;while true do if ((3808>2924) and (v249==(1205 -(902 + 303)))) then v250=v178[v247];v250[1 -0 ][v250[4 -2 ]]=v248;break;end end end});for v251=1 + 0 ,v83[4] do local v252=1690 -((1971 -850) + 569) ;local v253;while true do if (v252==1) then if (v253[215 -(22 + 192) ]==(698 -(483 + 200))) then v178[v251-1 ]={v81,v253[3 -0 ]};else v178[v251-(766 -(468 + 297)) ]={v61,v253[6 -3 ]};end v80[ #v80 + 1 ]=v178;break;end if ((3891<4919) and (v252==(0 -0))) then v75=v75 + 1 + 0 ;v253=v71[v75];v252=237 -(141 + 95) ;end end end v81[v83[2 + 0 ]]=v29(v176,v177,v62);end elseif ((v84<=(82 -50)) or (2234<=1502)) then v81[v83[4 -2 ]][v83[(2 -1) + 2 ]]=v83[10 -(11 -5) ];elseif ((v84==(24 + (38 -29))) or (2512<432)) then local v295=v83[2 + 1 ];local v296=v81[v295];for v334=v295 + ((2 -1) -0) ,v83[4] do v296=v296   .. v81[v334] ;end v81[v83[2 + 0 + 0 ]]=v296;else local v298=163 -(92 + 15 + 56) ;local v299;while true do if (v298==(0 + 0)) then v299=v83[2];v81[v299]=v81[v299]();break;end end end elseif ((v84<=(86 -34)) or (1848==865)) then if ((v84<=((1877 -1069) -(574 + 191))) or (4682<=4541)) then if (v84<=(32 + 6)) then if ((v84<=36) or (3026>=4046)) then if ((2008>638) and (v84>(87 -52))) then local v182=v83[2 + 0 ];local v183=v81[v182];local v184=v83[852 -(59 + 195 + 198 + 397) ];for v254=127 -(55 + 71) ,v184 do v183[v254]=v81[v182 + v254 ];end else local v185=0 -0 ;local v186;while true do if ((1775<=3233) and (v185==(1790 -(573 + 761 + 456)))) then v186=v83[5 -(1099 -(709 + 387)) ];v81[v186](v81[v186 + 1 + (1858 -(673 + 1185)) ]);break;end end end elseif (v84==(58 -21)) then do return;end else v81[v83[2]]=v29(v72[v83[942 -(714 + 225) ]],nil,v62);end elseif (v84<=(116 -76)) then if (v84==(53 -14)) then v81[v83[1 + 1 ]]={};else v81[v83[2 -(0 -0) ]]=v61[v83[3]];end elseif (v84<=41) then v75=v83[809 -(118 + 688) ];elseif (v84==(90 -(25 + 23))) then local v300=v83[1 + 1 ];do return v13(v81,v300,v300 + v83[1889 -(927 + 959) ] );end else local v301=0 -0 ;local v302;local v303;while true do if ((v301==(733 -(16 + 716))) or (4543==1997)) then for v394=v302 + (1 -(0 -0)) ,v83[100 -(11 + 86) ] do v7(v303,v81[v394]);end break;end if (v301==(0 -(0 -0))) then v302=v83[287 -(175 + 110) ];v303=v81[v302];v301=2 -1 ;end end end elseif (v84<=(231 -184)) then if ((v84<=(1841 -(503 + 925 + 368))) or (3102<728)) then if (v84>(33 + 11)) then v81[v83[2]]=v81[v83[8 -5 ]][v83[3 + 1 ]];else v81[v83[1063 -(810 + 251) ]]={};end elseif (v84==(32 + 14)) then local v195=v83[1 + 1 ];local v196=v83[4 + 0 ];local v197=v195 + (535 -((57 -14) + 490)) ;local v198={v81[v195](v81[v195 + (734 -(711 + 22)) ],v81[v197])};for v257=1,v196 do v81[v197 + v257 ]=v198[v257];end local v199=v198[3 -2 ];if v199 then local v304=859 -(240 + 619) ;while true do if (v304==(0 + (0 -0))) then v81[v197]=v199;v75=v83[5 -2 ];break;end end else v75=v75 + (1 -0) ;end else local v200=v83[1 + 1 ];local v201=v81[v200];local v202=v83[1747 -(1344 + 400) ];for v260=406 -(255 + 150) ,v202 do v201[v260]=v81[v200 + v260 ];end end elseif (v84<=(39 + 10)) then if ((345==345) and (v84>((1906 -(446 + 1434)) + 22))) then local v203=v72[v83[12 -9 ]];local v204;local v205={};v204=v10({},{__index=function(v263,v264) local v265=v205[v264];return v265[3 -2 ][v265[2]];end,__newindex=function(v266,v267,v268) local v269=1739 -(404 + 1335) ;local v270;while true do if (v269==(406 -(183 + 223))) then v270=v205[v267];v270[1][v270[2 -0 ]]=v268;break;end end end});for v271=(1284 -(1040 + 243)) + 0 ,v83[4] do local v272=0 + 0 ;local v273;while true do if ((v272==(338 -(10 + 327))) or (2827<378)) then if (v273[1 + 0 ]==(353 -(118 + 220))) then v205[v271-(1 + 0) ]={v81,v273[12 -9 ]};else v205[v271-(1494 -(711 + 782)) ]={v61,v273[1 + 2 ]};end v80[ #v80 + (1820 -(580 + 1239)) ]=v205;break;end if ((v272==(0 -0)) or (3476<2597)) then v75=v75 + 1 + (0 -0) ;v273=v71[v75];v272=1 + 0 ;end end end v81[v83[1 + 1 ]]=v29(v203,v204,v62);else v81[v83[4 -2 ]]=v62[v83[3]];end elseif (v84<=(1897 -(559 + 1288))) then local v209=v83[2 + 0 ];v81[v209]=v81[v209]();elseif ((3079<4794) and (v84==51)) then v81[v83[1169 -(645 + 522) ]][v83[3]]=v81[v83[1794 -(1010 + 780) ]];elseif (v81[v83[2 + 0 ]]==v83[19 -15 ]) then v75=v75 + 1 ;else v75=v83[8 -(1936 -(609 + 1322)) ];end elseif (v84<=((2351 -(13 + 441)) -(1045 + 791))) then if (v84<=(141 -85)) then if (v84<=(81 -27)) then if ((4854>4464) and (v84==(558 -(351 + 154)))) then v81[v83[1576 -(1281 + 293) ]][v83[269 -(28 + 238) ]]=v81[v83[(29 -21) -4 ]];else local v213=(4083 -2524) -(1381 + 178) ;local v214;local v215;while true do if ((v213==(1 + (0 -0))) or (4912==3758)) then v81[v214 + 1 ]=v215;v81[v214]=v215[v83[1 + 3 ]];break;end if (0==v213) then v214=v83[2 + 0 ];v215=v81[v83[2 + 1 ]];v213=1;end end end elseif (v84==(189 -(486 -352))) then if (v81[v83[2 + 0 ]]==v81[v83[474 -(381 + 89) ]]) then v75=v75 + 1 + 0 + 0 ;else v75=v83[3 + 0 ];end else v81[v83[2 -0 ]]=v29(v72[v83[3]],nil,v62);end elseif (v84<=(1214 -(1074 + 82))) then if ((126<=3482) and (v84==(124 -(30 + 37)))) then if  not v81[v83[1786 -(214 + 1570) ]] then v75=v75 + (1456 -(990 + 465)) ;else v75=v83[3];end else local v217=0;local v218;while true do if ((v217==(0 + 0)) or (2374==4374)) then v218=v83[1 + 1 ];v81[v218](v81[v218 + 1 + 0 ]);break;end end end elseif ((1575==1575) and (v84<=(231 -172))) then v81[v83[1728 -(1668 + 58) ]]=v62[v83[(1866 -1237) -(281 + 231 + 114) ]];elseif ((v84>60) or (2234==1455)) then local v309=0 -0 ;local v310;local v311;while true do if ((v309==(0 -0)) or (1067>1779)) then v310=v83[6 -(7 -3) ];v311=v81[v83[3]];v309=1 + 0 ;end if ((2161>=934) and (v309==(1 + 0 + 0 + 0))) then v81[v310 + 1 + 0 + 0 ]=v311;v81[v310]=v311[v83[13 -9 ]];break;end end else local v312=v83[1996 -(109 + 1885) ];local v313=v83[4];local v314=v312 + (1471 -(1269 + 200)) ;local v315={v81[v312](v81[v312 + 1 ],v81[v314])};for v342=1 -0 ,v313 do v81[v314 + v342 ]=v315[v342];end local v316=v315[1];if v316 then local v365=0;while true do if ((1612==1612) and (v365==(815 -(98 + 717)))) then v81[v314]=v316;v75=v83[829 -(802 + 24) ];break;end end else v75=v75 + (1 -(0 + 0)) ;end end elseif (v84<=(82 -17)) then if ((4352>=2833) and (v84<=63)) then if ((v84>(10 + 51 + 1)) or (3222<3073)) then v81[v83[2 + 0 ]]=v83[(434 -(153 + 280)) + 2 ]~=(0 + (0 -0)) ;else local v222=v83[5 -(3 + 0) ];local v223={v81[v222](v81[v222 + 1 ])};local v224=0 + 0 ;for v274=v222,v83[2 + 2 ] do local v275=0 + 0 + 0 ;while true do if ((744<=2942) and (v275==0)) then v224=v224 + 1 + 0 ;v81[v274]=v223[v224];break;end end end end elseif (v84==(30 + 34)) then if (v83[2]==v81[v83[4]]) then v75=v75 + (1434 -(418 + 379 + 636)) ;else v75=v83[14 -(10 + 1) ];end else v81[v83[1621 -(1427 + 192) ]]=v83[3];end elseif ((v84<=67) or (1833<=1322)) then if (v84>66) then local v227=0;local v228;while true do if (v227==(0 + 0)) then v228=v83[4 -2 ];v81[v228](v13(v81,v228 + 1 + 0 ,v83[2 + 1 ]));break;end end else v81[v83[2]]=v83[3]~=((237 + 89) -(192 + 134)) ;end elseif ((v84<=68) or (3467<=1055)) then if v81[v83[1278 -(316 + 960) ]] then v75=v75 + 1 ;else v75=v83[2 + 1 ];end elseif ((3541==3541) and (v84==(54 + 15))) then local v319=0;local v320;while true do if (v319==((0 -0) + 0)) then v320=v83[(5 + 2) -5 ];v81[v320](v13(v81,v320 + (552 -(83 + 468)) ,v83[3]));break;end end else local v321=v83[1808 -(1202 + 604) ];local v322={};for v346=4 -(670 -(89 + 578)) , #v80 do local v347=0 -0 ;local v348;while true do if (((0 -0)==v347) or (3557>=4003)) then v348=v80[v346];for v404=325 -(45 + 280) , #v348 do local v405=v348[v404];local v406=v405[1 + 0 ];local v407=v405[2 + 0 ];if (((v406==v81) and (v407>=v321)) or (657>=1668)) then local v408=0 + 0 ;while true do if ((v408==(0 + 0)) or (1027>3858)) then v322[v407]=v406[v407];v405[1 + 0 ]=v322;break;end end end end break;end end end end v75=v75 + (1 -0) ;break;end if ((v116==(1911 -(340 + 1571))) or (3654<450)) then v83=v71[v75];v84=v83[1 + 0 + 0 ];v116=1773 -(1733 + 39) ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
